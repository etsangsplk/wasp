# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="<AtWf2QnKi2ecVAFI2g2k8F6qPM2OUi:s`WYrc1><bFxdNEU<A;3n5ZEHp?A^W/="

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# BodyParser options
# ~~~~~~~~~~~~~~~~~~
parsers.text.maxLength = 8m

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=INFO

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

wasp.persistence-id = "wasp-journal"
wasp.version = "1.0.0"
wasp.journal.dir = "/data/wasp-journal/"
wasp.snapshot-store.dir = "/data/wasp-snapshots/"
wasp.main-stream = "main-stream"

#Change to true to enable authentication
wasp.auth = true

akka {
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
  actor.serializers {
    kryo = "serializers.WaspEventSerializer"
  }
  actor.serialization-bindings {
    "models.WaspEvent" = kryo
  }
  persistence {
    journal.leveldb.dir = ${wasp.journal.dir}
    snapshot-store.local.dir = ${wasp.snapshot-store.dir}
    journal.leveldb.max-buffer-size = 10000
    journal.plugin = "akka.persistence.journal.leveldb"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    view.auto-update = off
  }
  debug.lifecycle = on

}


#Default Access Rights is READ and WRITE
#Setting self or others as an empty string means NO_ACCESS
#All fields mandatory (path, roles, self, others)

permissions = [
  # { path: "production.towncenter.sites.published.*" }
]

auth {
  file-path = "sample-wasp-authenticator/src/main/resources/sample_passwd"
}

default {
  user.name = "Admin"
  user.email = "admin@example.com"
  user.isAdmin = true
}

http.netty.maxInitialLineLength=81920
